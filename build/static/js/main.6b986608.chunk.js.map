{"version":3,"sources":["components/lobby.js","components/home.js","components/room.js","App.js","reportWebVitals.js","index.js"],"names":["useStyles","makeStyles","theme","input1","fontSize","color","palette","primary","main","input2","specialOutline","borderColor","BlueSwitch","withStyles","switchBase","backgroundColor","opacity","checked","track","Switch","Lobby","useState","hostOnly","setHostOnly","name","setName","statementOneInput","setStatementOneInput","statementTwoInput","setStatementTwoInput","statementThreeInput","setStatementThreeInput","startClicked","setStartClicked","nameInputRef","useRef","statementOneInputRef","statementTwoInputRef","statementThreeInputRef","history","useHistory","routeChange","newPath","push","classes","Container","maxWidth","Grid","container","spacing","alignItems","direction","justify","style","minHeight","marginTop","flexWrap","item","xs","width","TextField","type","variant","fullWidth","InputProps","placeholder","input","notchedOutline","focused","inputRef","error","label","value","onChange","e","target","FormControlLabel","control","switchStyle1","prev","inputProps","multiline","Button","onClick","nameInput","current","input3","height","Home","join","joinClicked","roomCodeInputRef","length","startAdornment","InputAdornment","position","maxLength","Room","BasicExample","exact","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","createMuiTheme","light","dark","contrastText","secondary","ReactDOM","render","StrictMode","ThemeProvider","document","getElementById"],"mappings":"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","file":"static/js/main.6b986608.chunk.js","sourcesContent":["import React, { useState, useRef } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nimport { Grid, Container, TextField, Button } from '@material-ui/core';\r\n\r\nimport Switch from '@material-ui/core/Switch';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport PlayArrowIcon from '@material-ui/icons/PlayArrow';\r\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\r\n\r\nimport { makeStyles, withStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    input1: {\r\n        fontSize: 'x-large',\r\n        color: theme.palette.primary.main\r\n      },\r\n      input2: {\r\n        fontSize: 'x-large',\r\n        color: theme.palette.primary.main\r\n      },\r\n    specialOutline: {\r\n        borderColor: theme.palette.primary.main,\r\n    }\r\n  }));\r\n\r\n  const BlueSwitch = withStyles({\r\n    switchBase: {\r\n      color: '#3f50b5',\r\n      '&$checked': {\r\n        color: '#3f50b5',\r\n      },\r\n      '&$checked + $track': {\r\n        backgroundColor: '#3f50b5',\r\n        opacity: 0.8\r\n      },\r\n    },\r\n    checked: {},\r\n    track: {},\r\n  })(Switch);\r\n\r\nexport default function Lobby()  {\r\n    const [hostOnly, setHostOnly] = useState(false);\r\n    const [name, setName] = useState(\"\");\r\n    const [statementOneInput, setStatementOneInput] = useState(\"\");\r\n    const [statementTwoInput, setStatementTwoInput] = useState(\"\");\r\n    const [statementThreeInput, setStatementThreeInput] = useState(\"\");\r\n    const [startClicked, setStartClicked] = useState(false);\r\n\r\n    const nameInputRef = useRef();\r\n    const statementOneInputRef = useRef();\r\n    const statementTwoInputRef = useRef();\r\n    const statementThreeInputRef = useRef();\r\n\r\n    const history = useHistory();\r\n    const routeChange = (newPath) =>{\r\n        history.push(newPath);\r\n    }\r\n\r\n    const handleHostOnlyClicked = () => {\r\n      setHostOnly((prev) => !prev);\r\n    };\r\n\r\n    \r\n    const validateAndGo = () => {\r\n      setStartClicked(true);\r\n      let nameInput = (nameInputRef.current.value !== '');\r\n      let input1 = (statementOneInputRef.current?.value !== '');\r\n      let input2 = (statementTwoInputRef.current?.value !== '');\r\n      let input3 = (statementThreeInputRef.current?.value !=='');\r\n      if (nameInput && ((input1 && input2 && input3) || hostOnly)) routeChange('room');\r\n    }\r\n\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <Container maxWidth='md'>\r\n            <Grid \r\n            container\r\n            spacing={1}\r\n            alignItems='center'\r\n            direction='column'\r\n            justify='center'\r\n            style={{ minHeight: '100vh', marginTop: '1em', flexWrap: 'nowrap' }}>\r\n                <Grid item xs={12} style={{width: '100%'}}>\r\n                <TextField color='primary' type='text' variant='outlined' fullWidth={true} \r\n                        InputProps={{\r\n                        placeholder: 'Room name (optional)',\r\n                        classes: { \r\n                            input: classes.input1,\r\n                            notchedOutline: classes.specialOutline,\r\n                            focused: classes.specialOutline\r\n                        }\r\n                      }} />\r\n                </Grid>\r\n                <Grid item xs={12} style={{width: '100%'}}>\r\n                  <TextField \r\n                  inputRef={nameInputRef} \r\n                  error={startClicked && name === ''} \r\n                  label={(startClicked && name === '') ? 'Required' : ''}\r\n                  value={name} onChange={e => setName(e.target.value)}\r\n                  color='primary' \r\n                  type='text' \r\n                  variant='outlined' \r\n                  fullWidth={true} \r\n                        InputProps={{\r\n                        placeholder: 'Your name',\r\n                        classes: { \r\n                            input: classes.input1,\r\n                            notchedOutline: classes.specialOutline,\r\n                            focused: classes.specialOutline\r\n                        }\r\n                      }} />\r\n                </Grid>\r\n                <Grid item xs={12} style={{width: '100%'}}>\r\n                  <FormControlLabel classes={{label: classes.input2}} control=\r\n                  {<BlueSwitch \r\n                      checked={hostOnly} classes={classes.switchStyle1}\r\n                      onChange={handleHostOnlyClicked}\r\n                      inputProps={{ 'aria-label': 'secondary checkbox' }}\r\n                  />}  label=\"HOST ONLY\" />\r\n                </Grid>\r\n                {!hostOnly && \r\n                <Grid item xs={12} style={{width: '100%'}}>\r\n                  <TextField inputRef={statementOneInputRef}\r\n                  error={startClicked && statementOneInput === ''} \r\n                  label={(startClicked && statementTwoInput === '') ? 'Required' : ''}\r\n                  value={statementOneInput} onChange={e => setStatementOneInput(e.target.value)}\r\n                      color='primary' \r\n                      type='text' \r\n                      multiline \r\n                      variant='outlined' \r\n                      fullWidth={true} \r\n                      InputProps={{\r\n                      placeholder: 'Statement 1',\r\n                      classes: { \r\n                          input: classes.input1,\r\n                          notchedOutline: classes.specialOutline,\r\n                          focused: classes.specialOutline\r\n                      }\r\n                  }} />\r\n                </Grid> }\r\n                {!hostOnly &&\r\n                <Grid item xs={12} style={{width: '100%'}}>\r\n                  <TextField inputRef={statementTwoInputRef}\r\n                  error={startClicked && statementTwoInput === ''} \r\n                  label={(startClicked && statementTwoInput === '') ? 'Required' : ''}\r\n                  value={statementTwoInput} onChange={e => setStatementTwoInput(e.target.value)}\r\n                      color='primary'\r\n                      type='text' \r\n                      multiline \r\n                      variant='outlined' \r\n                      fullWidth={true} \r\n                        InputProps={{\r\n                        placeholder: 'Statement 2',\r\n                        classes: { \r\n                            input: classes.input1,\r\n                            notchedOutline: classes.specialOutline,\r\n                            focused: classes.specialOutline\r\n                        }\r\n                      }} />\r\n                </Grid>}\r\n                {!hostOnly &&\r\n                <Grid item xs={12} style={{width: '100%'}}>\r\n                  <TextField inputRef={statementThreeInputRef}\r\n                  error={startClicked && statementThreeInput === ''} \r\n                  label={(startClicked && statementTwoInput === '') ? 'Required' : ''}\r\n                  value={statementThreeInput} onChange={e => setStatementThreeInput(e.target.value)}\r\n                  color='primary' \r\n                  type='text' \r\n                  multiline \r\n                  variant='outlined' \r\n                  fullWidth={true} \r\n                        InputProps={{\r\n                        placeholder: 'Statement 3',\r\n                        classes: { \r\n                            input: classes.input1,\r\n                            notchedOutline: classes.specialOutline,\r\n                            focused: classes.specialOutline\r\n                        }\r\n                      }} />\r\n                </Grid>}\r\n                <Grid container spacing={1} style={{width: '100%'}}>\r\n                    <Grid item xs={6}>\r\n                    <Button \r\n                        color='primary' \r\n                        fullWidth={true} \r\n                        variant='outlined'\r\n                        onClick={() => routeChange('/')}>\r\n                            <Grid>\r\n                                <ArrowBackIcon style={{ fontSize: 40 }} /><br />Back\r\n                            </Grid>\r\n                        </Button>\r\n                    </Grid>\r\n                    <Grid item xs={6}>\r\n                    <Button \r\n                        color='primary' \r\n                        fullWidth={true} \r\n                        variant='outlined'\r\n                        onClick={validateAndGo}>\r\n                            <Grid>\r\n                                <PlayArrowIcon style={{ fontSize: 40 }} /><br />Start\r\n                            </Grid>\r\n                        </Button>\r\n                    </Grid>\r\n                </Grid>\r\n            </Grid>\r\n        </Container>\r\n    );\r\n}","import React, { useState, useRef } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nimport { Button, Grid, Container, TextField } from '@material-ui/core';\r\nimport InputAdornment from '@material-ui/core/InputAdornment';\r\n\r\n\r\nimport PersonIcon from '@material-ui/icons/Person';\r\nimport PeopleIcon from '@material-ui/icons/People';\r\nimport HelpIcon from '@material-ui/icons/Help';\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    input1: {\r\n        height: 48,\r\n        fontSize: 'xxx-large',\r\n        color: theme.palette.primary.main\r\n      },\r\n    specialOutline: {\r\n        borderColor: theme.palette.primary.main,\r\n    }\r\n  }));\r\n\r\nexport default function Home()  {\r\n    const [join, joinClicked] = useState(false);\r\n\r\n    const roomCodeInputRef = useRef();\r\n\r\n    const history = useHistory();\r\n    const routeChange = (newPath) =>{\r\n        history.push(newPath);\r\n    }\r\n\r\n    const handleJoinClicked = () => {\r\n      joinClicked((prev) => !prev);\r\n    };\r\n\r\n    const roomCodeInputChanged = () => {\r\n        let code = roomCodeInputRef.current.value;\r\n        if (code.length === 4)\r\n        {\r\n            // Disable the textfield and try to connect to the room\r\n        }\r\n      };\r\n\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <Container maxWidth='md'>\r\n                <Grid \r\n                container\r\n                spacing={1}\r\n                alignItems='center'\r\n                direction='column'\r\n                justify='center'\r\n                style={{ minHeight: '100vh', flexWrap: 'nowrap' }}>\r\n                    <Grid item xs={12} style={{width: '100%'}}>\r\n                        <Button \r\n                        color='primary' \r\n                        fullWidth={true} \r\n                        variant='outlined'\r\n                        onClick={() => routeChange('lobby')}>\r\n                            <Grid>\r\n                                <PersonIcon style={{ fontSize: 40 }} /><br />Host\r\n                            </Grid>\r\n                        </Button>\r\n                    </Grid>\r\n                    <Grid item xs={12} style={{width: '100%'}}>\r\n                        {!join && <Button\r\n                        color='primary' \r\n                        fullWidth={true}\r\n                        variant='outlined'\r\n                        onClick={handleJoinClicked}>\r\n                            <Grid>\r\n                                <PeopleIcon style={{ fontSize: 40 }} /><br />Join\r\n                            </Grid>\r\n                        </Button>}\r\n                        {join &&\r\n                        <TextField inputRef={roomCodeInputRef}\r\n                            onChange={roomCodeInputChanged}\r\n                            color='primary' \r\n                            type='text' \r\n                            variant='outlined' \r\n                            fullWidth={true} \r\n                            InputProps={{\r\n                            placeholder: 'Enter room code',\r\n                            startAdornment: (\r\n                              <InputAdornment position='start'>\r\n                                <PeopleIcon color='primary'  style={{ fontSize: 40 }} />\r\n                              </InputAdornment>\r\n                            ),\r\n                            classes: { \r\n                                input: classes.input1,\r\n                                notchedOutline: classes.specialOutline,\r\n                                focused: classes.specialOutline\r\n                            }\r\n                          }}\r\n                          inputProps={{\r\n                            maxLength: 4\r\n                          }} />}\r\n                    </Grid>\r\n                    <Grid item xs={12} style={{width: '100%'}}>\r\n                        <Button \r\n                        color='primary' \r\n                        fullWidth={true} \r\n                        variant='outlined' \r\n                        onClick={() => routeChange('help')}>\r\n                            <Grid>\r\n                                <HelpIcon style={{ fontSize: 40 }} /><br />Help\r\n                            </Grid>\r\n                        </Button>\r\n                    </Grid>\r\n                </Grid>\r\n        </Container>\r\n    );\r\n}","import React, { useState, useRef } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nimport { Button, Grid, Container, TextField } from '@material-ui/core';\r\nimport InputAdornment from '@material-ui/core/InputAdornment';\r\n\r\n\r\nimport PersonIcon from '@material-ui/icons/Person';\r\nimport PeopleIcon from '@material-ui/icons/People';\r\nimport HelpIcon from '@material-ui/icons/Help';\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    input1: {\r\n        height: 48,\r\n        fontSize: 'xxx-large',\r\n        color: theme.palette.primary.main\r\n      },\r\n    specialOutline: {\r\n        borderColor: theme.palette.primary.main,\r\n    }\r\n  }));\r\n\r\nexport default function Room()  {\r\n    const [join, joinClicked] = useState(false);\r\n\r\n    const roomCodeInputRef = useRef();\r\n\r\n    const history = useHistory();\r\n    const routeChange = (newPath) =>{\r\n        history.push(newPath);\r\n    }\r\n\r\n    const handleJoinClicked = () => {\r\n      joinClicked((prev) => !prev);\r\n    };\r\n\r\n    const roomCodeInputChanged = () => {\r\n        let code = roomCodeInputRef.current.value;\r\n        if (code.length === 4)\r\n        {\r\n            // Disable the textfield and try to connect to the room\r\n        }\r\n      };\r\n\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <Container maxWidth='md'>\r\n                <Grid \r\n                container\r\n                spacing={1}\r\n                alignItems='center'\r\n                direction='column'\r\n                justify='center'\r\n                style={{ minHeight: '100vh', flexWrap: 'nowrap' }}>\r\n                    <Grid item xs={12} style={{width: '100%'}}>\r\n                        <Button \r\n                        color='primary' \r\n                        fullWidth={true} \r\n                        variant='outlined'\r\n                        onClick={() => routeChange('lobby')}>\r\n                            <Grid>\r\n                                <PersonIcon style={{ fontSize: 40 }} /><br />Host\r\n                            </Grid>\r\n                        </Button>\r\n                    </Grid>\r\n                    <Grid item xs={12} style={{width: '100%'}}>\r\n                        {!join && <Button\r\n                        color='primary' \r\n                        fullWidth={true}\r\n                        variant='outlined'\r\n                        onClick={handleJoinClicked}>\r\n                            <Grid>\r\n                                <PeopleIcon style={{ fontSize: 40 }} /><br />Join\r\n                            </Grid>\r\n                        </Button>}\r\n                        {join &&\r\n                        <TextField inputRef={roomCodeInputRef}\r\n                            onChange={roomCodeInputChanged}\r\n                            color='primary' \r\n                            type='text' \r\n                            variant='outlined' \r\n                            fullWidth={true} \r\n                            InputProps={{\r\n                            placeholder: 'Enter room code',\r\n                            startAdornment: (\r\n                              <InputAdornment position='start'>\r\n                                <PeopleIcon color='primary'  style={{ fontSize: 40 }} />\r\n                              </InputAdornment>\r\n                            ),\r\n                            classes: { \r\n                                input: classes.input1,\r\n                                notchedOutline: classes.specialOutline,\r\n                                focused: classes.specialOutline\r\n                            }\r\n                          }}\r\n                          inputProps={{\r\n                            maxLength: 4\r\n                          }} />}\r\n                    </Grid>\r\n                    <Grid item xs={12} style={{width: '100%'}}>\r\n                        <Button \r\n                        color='primary' \r\n                        fullWidth={true} \r\n                        variant='outlined' \r\n                        onClick={() => routeChange('help')}>\r\n                            <Grid>\r\n                                <HelpIcon style={{ fontSize: 40 }} /><br />Help\r\n                            </Grid>\r\n                        </Button>\r\n                    </Grid>\r\n                </Grid>\r\n        </Container>\r\n    );\r\n}","import React from \"react\";\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route\r\n} from \"react-router-dom\";\r\n\r\nimport Lobby from './components/lobby';\r\nimport Home from './components/home';\r\nimport Room from './components/room';\r\n\r\nexport default function BasicExample() {\r\n  return (\r\n    <Router>\r\n        <Switch>\r\n          <Route exact path=\"/\">\r\n            <Home />\r\n          </Route>\r\n          <Route path=\"/lobby\">\r\n            <Lobby />\r\n          </Route>\r\n          <Route path=\"/room\">\r\n            <Room />\r\n          </Route>\r\n        </Switch>\r\n    </Router>\r\n  );\r\n}\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport { createMuiTheme, ThemeProvider } from '@material-ui/core/styles';\r\n\r\nconst theme = createMuiTheme({\r\n  palette: {\r\n    primary: {\r\n      light: '#757ce8',\r\n      main: '#3f50b5',\r\n      dark: '#002884',\r\n      contrastText: '#fff',\r\n    },\r\n    secondary: {\r\n      light: '#ff7961',\r\n      main: '#f44336',\r\n      dark: '#ba000d',\r\n      contrastText: '#000',\r\n    },\r\n  },\r\n});\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <ThemeProvider theme={theme}>\r\n      <App />\r\n    </ThemeProvider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}